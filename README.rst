.. image:: https://travis-ci.org/dlax/datalocale-formula.svg?branch=datalocale
    :target: https://travis-ci.org/dlax/datalocale-formula

===============
datalocale-formula
===============

A saltstack formula handling installation of `datalocale`_.

Available states
================

.. contents::
    :local:

``datalocale``
-----------

Equivalent to ``datalocale.install`` and ``datalocale.config``.

``datalocale.install``
-------------------

Installs the datalocale package from logilab repositories and create an instance
for user ``datalocale``.

Cubicweb config files are located in ``~datalocale/etc/cubicweb.d/datalocale`` and
``cubicweb-ctl`` can be invoked as user ``datalocale`` with environment variable
``CW_MODE=user``.

The state require the installation of `epel-formula`_ and `postgres-formula`_
with ``postgres.lookup.version: 9.4`` (see ``pillar.example``).

``datalocale.config``
------------------

Only manage instance configuration files.

``datalocale.db-create``
---------------------

Create instance database with ``cubicweb-ctl db-create`` (call implicitly ``db-init``).

``datalocale.db-init``
---------------------

Initialize instance database schema with ``cubicweb-ctl db-init``.

``datalocale.supervisor``
----------------------

Install and manage `supervisor`_ configuration for the datalocale installation.

+----------+-----------------------------------------------------+-------------------------------------+
| OS       | Restart instance                                    | Restart supervisor                  |
+==========+=====================================================+=====================================+
| Centos 6 | ``su - datalocale -c 'supervisorctl restart datalocale'`` | ``/etc/init.d/supervisord restart`` |
+----------+-----------------------------------------------------+-------------------------------------+
| Centos 7 | ``supervisorctl restart datalocale``                   | ``systemctl restart supervisord``   |
+----------+-----------------------------------------------------+-------------------------------------+

Requirements
============

If using postgres as database driver, ensure the `postgres contrib`_ package is
installed on server side.


Testing
=======

The script `run-test.py` can help to develop and test the formula using
`docker`_ and `testinfra`_.

The command ``./run-test.py dev centos6`` will build image from
``test/centos6.Dockerfile`` and span a shell in a new container with mounted
volumes from the host (so you can develop formula on the host and test it in
the container with ``salt-call``).

The command ``./run-test.py dev centos6 --salt`` is the same as above but will
provision the container (eg. calling ``salt-call state.highstate``)

The command ``./run-test.py test centos6`` built a provisioned image
(highstate) and run testinfra tests on it.

Note that you can add any parameters that testinfra (pytest) accept, for
instance ``./run-test.py test centos6 -- -k idempotence --pdb``.


Testing migration
=================

Add dumps generated by ``cubicweb-ctl db-dump`` in the ``test/dumps`` directory, then::

    # To test upgrade against latest public changeset of http://hg.logilab.org/master/cubes/saem_ref
    ./run-tests.py test centos7 -- test/test_migration.py --upgrade-revision master

    # To test against any revision from http://hg.logilab.org/review/cubes/saem_ref
    ./run-tests.py test centos7 -- test/test_migration.py --upgrade-revision REV


.. _datalocale: https://www.cubicweb.org/project/cubicweb-datalocale
.. _supervisor: http://supervisord.org
.. _docker: https://www.docker.com/
.. _testinfra: https://testinfra.readthedocs.org/
.. _epel-formula: https://github.com/saltstack-formulas/epel-formula
.. _postgres-formula: https://github.com/saltstack-formulas/postgres-formula
.. _postgres contrib: https://www.postgresql.org/docs/current/static/contrib.html
